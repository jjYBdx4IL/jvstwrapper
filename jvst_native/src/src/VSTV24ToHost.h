/* 
 * jVSTwRapper - The Java way into VST world!
 * 
 * jVSTwRapper is an easy and reliable Java Wrapper for the Steinberg VST interface. 
 * It enables you to develop VST 2.3 compatible audio plugins and virtual instruments 
 * plus user interfaces with the Java Programming Language. 3 Demo Plugins(+src) are included!
 * 
 * Copyright (C) 2006  Daniel Martin [daniel309@users.sourceforge.net] 
 * 					   and many others, see CREDITS.txt
 *
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jvst_wrapper_communication_VSTV24ToHost */

#ifndef _Included_jvst_wrapper_communication_VSTV24ToHost
#define _Included_jvst_wrapper_communication_VSTV24ToHost
#ifdef __cplusplus
extern "C" {
#endif
#undef jvst_wrapper_communication_VSTV24ToHost_CANDO_DONT_KNOW
#define jvst_wrapper_communication_VSTV24ToHost_CANDO_DONT_KNOW 0L
#undef jvst_wrapper_communication_VSTV24ToHost_CANDO_YES
#define jvst_wrapper_communication_VSTV24ToHost_CANDO_YES 1L
#undef jvst_wrapper_communication_VSTV24ToHost_CANDO_NO
#define jvst_wrapper_communication_VSTV24ToHost_CANDO_NO -1L
#undef jvst_wrapper_communication_VSTV24ToHost_VST_LANG_ENGLISH
#define jvst_wrapper_communication_VSTV24ToHost_VST_LANG_ENGLISH 1L
#undef jvst_wrapper_communication_VSTV24ToHost_VST_LANG_GERMAN
#define jvst_wrapper_communication_VSTV24ToHost_VST_LANG_GERMAN 2L
#undef jvst_wrapper_communication_VSTV24ToHost_VST_LANG_FRENCH
#define jvst_wrapper_communication_VSTV24ToHost_VST_LANG_FRENCH 3L
#undef jvst_wrapper_communication_VSTV24ToHost_VST_LANG_ITALIAN
#define jvst_wrapper_communication_VSTV24ToHost_VST_LANG_ITALIAN 4L
#undef jvst_wrapper_communication_VSTV24ToHost_VST_LANG_SPANISH
#define jvst_wrapper_communication_VSTV24ToHost_VST_LANG_SPANISH 5L
#undef jvst_wrapper_communication_VSTV24ToHost_VST_LANG_JAPANESE
#define jvst_wrapper_communication_VSTV24ToHost_VST_LANG_JAPANESE 6L
/*
 * Class:     jvst_wrapper_communication_VSTV24ToHost
 * Method:    canDoubleReplacing
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jvst_wrapper_communication_VSTV24ToHost_canDoubleReplacing
  (JNIEnv *, jobject, jboolean);

#ifdef __cplusplus
}
#endif
#endif
