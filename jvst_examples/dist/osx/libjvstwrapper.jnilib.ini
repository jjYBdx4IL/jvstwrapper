#/* 
# * jVSTwRapper - The Java way into VST world!
# * 
# * jVSTwRapper is an easy and reliable Java Wrapper for the Steinberg VST interface. 
# * It enables you to develop VST 2.3 compatible audio plugins and virtual instruments 
# * plus user interfaces with the Java Programming Language. 3 Demo Plugins(+src) are included!
# * 
# * Copyright (C) 2006  Daniel Martin [daniel309@users.sourceforge.net] 
# * 					   and many others, see CREDITS.txt
# *
# *
# * This library is free software; you can redistribute it and/or
# * modify it under the terms of the GNU Lesser General Public
# * License as published by the Free Software Foundation; either
# * version 2.1 of the License, or (at your option) any later version.
# *
# * This library is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# * Lesser General Public License for more details.
# *
# * You should have received a copy of the GNU Lesser General Public
# * License along with this library; if not, write to the Free Software
# * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# */

# **** PLEASE USE THE FORUM FOR QUESIONS ****
# http://sourceforge.net/forum/forum.php?forum_id=318265


#jVSTwRapper configuration
#*******************************************************************

# Please NOTE: Rename the jVSTwRapper.dll to the name of your .ini file. 
# Only if you do this the wrapper will be initialised correctly and your 
# plugin will work. You can choose any valid filename for that (This name 
# will also be your plugin name in the audio app). Make sure, that the .dll and 
# the .ini file both have the same name (without the file extension).




# This section descibes the java classes which implement your plugin.
# USE "/ notation" (e.g java/lang/String) and fully 
# qualified class names

# this config value is MANDATORY!
# ******************************************************************
PluginClass=jvst/examples/jaydlay/JayDLay


# If your Plug doesnt have a custom user interface (UI), simply comment out
# the following line (prefix it with a #)
# NOTE: This requires at least java 1.5.0_06 on Mac OSX to work properly
# Use java -version in a terminal window to find out which version you have
# *** Still EXPERIMENTAL on the Mac --> commented out by default ***

# this config value is OPTIONAL!
# ******************************************************************
PluginUIClass=jvst/examples/jaydlay/JayDLayGUI


# Heres your ClassPath for your plugin. Please include all .jar files and 
# dont forget the jVSTwRapper_bin.jar. If you dont use jars at all, simply 
# put a dot (.) here.
# Note: The directory where your plug is stored is added by default.
# Please use the {WrapperPath} variable here. It will be replaced with the 
# Path where your wrapper dll is located and makes it possible to use relative paths
# for the used jars.
 
# this config value is MANDATORY!
# ******************************************************************
ClassPath={WrapperPath}/jVSTwRapper-0.9g.jar:{WrapperPath}/JayDLay-0.8.jar


# The libs here are added to the Bootstrap Classloader. Please dont modify any value 
# here. Especially, dont add your plug classes or the jVSTwRapper.jar. If you 
# do so, all native calls will be dispatched to just one library and will cause the JVM 
# to terminate if more than one plugin is used at the same time.

# this config value is MANDATORY!
# ******************************************************************
SystemClassPath={WrapperPath}/jVSTsYstem-0.9g.jar


# Set this value to 0 if you dont want the *_java_stdout.txt and *_log.txt to 
# be created.

# this config value is OPTIONAL!
# ******************************************************************
IsLoggingEnabled=0


# On the Mac, you can even use the revision version (e.g. 1.4.2). 
# On windows, only the first 2 numbers (e.g. 1.4) are allowed.
# If the desired JVM version given below is not found, we always fall back 
# to the default JVM version installed on your system and load it. 

# this config value is OPTIONAL!
# ******************************************************************
#RequestJVMVersion=1.4


# You can specify custom JVM Startup options here. (Max 5 though, use JVMOption1...JVMOption5)
# WARNING: providing ANY option, which is not recognized by your 
# JVM will cause it fail to start. So be sure to use a correct JVM Startup option here.

# these config values are OPTIONAL!
# Note: In order to use remote debugging on a 1.4 jVM enable the first 4 Options and MAKE SURE
# that you use a free local TCP port. Then use e.g. eclipse remote debug configuration to connect to 
# the suspended audio app. 

# this config value is OPTIONAL!
# ******************************************************************
#JVMOption1=-Xdebug
#JVMOption2=-Xnoagent
#JVMOption3=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
#JVMOption4=-Djava.compiler=NONE

#JVMOption1=-Xnoclassgc
#JVMOption2=-Xloggc:gclog.txt

#JVMOption1=-verbose:jni
#JVMOption2=-Xcheck:jni  

#END of INI file
#Please do not remove comments